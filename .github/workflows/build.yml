name: Build & Tests, Deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
env:
  php-version: '7.0'
  node-version: 15

jobs:
  tests:
    services:
      mysql:
            image: mysql:5.7
            env:
              MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
              MYSQL_DATABASE: db_test
            ports:
              - 3360:3306
            options: >-
              --health-cmd="mysqladmin ping"
              --health-interval=10s
              --health-timeout=5s
              --health-retries=3

    runs-on: ubuntu-latest
    name: Tests

    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup PHP ${{ env.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.php-version }}
        extensions: mbstring, dom, fileinfo
        coverage: none

    - name: Check PHP Version
      run: php -v
    - name: Check Composer Version
      run: composer -V
    - name: Check PHP Extensions
      run: php -m

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Install Dependencies
      run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader

    - name: Install NPM Dependencies
      run: npm install

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_PORT: 3306
        DB_USER: root
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_DATABASE: database/database.sqlite

      run: |
        php artisan migrate
        ./vendor/bin/phpunit

  sonarcloud:
    needs: Tests
    if: ${{ ! startsWith(github.ref, 'dependabot/') }}
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy
    needs: [tests]
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.SSH_USERNAME }}
          script: |
            cd /var/www/orbit-crm/
            git checkout -f
            git pull origin main
